Building a 'blog'

I've been meaning to start a writing page for a long time now, but never got to it because I've been obsessing over the format, how it'll be deployed, etc. Given the strange times we're living in right now, I suppose there's no better time to get started.
\<i\>Why are you blogging? Who are you targeting?\</i\>
I'm not quite sure myself. This project is largely for, and addressed to, myself – a place to compose/consolidate any knowledge that I hope to never forget, amongst other miscellaneous things that I'll realize on the way. A museum of my mind and its evolution over the years? Let's go with that for now. I don't foresee this being a periodical thing, expect no temporal trends.
A question that arises is why put this is online, visible to the public eye? I don't expect this site will ever be in any sort of limelight, and I'd like to keep it that way. That being said, it should be accessible enough that anyone looking specifically for me should be able to stumble upon this 'blog'. The idea of someone going down an internet rabbit hole and ending up here, of all places, entertains me. If you fit that criteria, I'm glad I put this up online :).
<hr>
Rather than making a separate post, I thought I'd briefly explain how my custom build process works for this blog (I should be able to show off to myself, right?). 
As of writing this post, the site is statically hosted by GitHub Pages. While I eventually want to dynamically host this site (to play around with custom web servers, self-hosting and other nifty things), I did want to get my blog up and running. One thing was certain – I did not want to be editing raw HTML files to upload my posts. The process had to be more accessible and streamlined. My (likely temporary) solution was to convert plain text files into pre-formatted HTML files by programmatically editing templates. Text files are accessible enough to be written wherever I am (mobile, laptop, etc.) and this approach allows me to have just a single build script to run. The python script can be found <a href="scripts/gen_writings.py">here</a>. It uses BeautifulSoup4 to edit the template with the content in the text files (as well extracting other things like the date last modified), eventually generating a HTML file like the one you're reading now!

